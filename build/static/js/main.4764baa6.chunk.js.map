{"version":3,"sources":["Filter.js","Notification.js","services/blogs.js","App.js","index.js"],"names":["Filter","props","blogs","handleDelete","allBlogs","map","data","key","id","content","name","url","className","onClick","Notification","message","axios","get","then","response","newObject","put","delete","App","useState","setBlogs","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","errorMessage","setErrorMessage","useEffect","blogService","onSubmit","event","preventDefault","Math","random","addedName","blogList","filter","b","length","window","confirm","newBlog","console","log","blog","concat","post","setTimeout","value","onChange","title","target","author","u","type","kill","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4764baa6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = props => {\r\n  const { blogs, handleDelete } = props;\r\n\r\n  const allBlogs = blogs.map(data => (\r\n    <li key={data.id}>\r\n      {data.content} {data.name} {data.url}\r\n      <button className=\"deletor\" onClick={() => handleDelete(data.id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  ));\r\n  return <div>{allBlogs}</div>;\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/blogs\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst destroy = id => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nexport default { getAll, create, update, destroy };\r\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./Filter\";\nimport Notification from \"./Notification\";\nimport axios from \"axios\";\nimport blogService from \"./services/blogs\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [newTitle, setNewTitle] = useState([\"\"]);\n  const [newAuthor, setNewAuthor] = useState([\"\"]);\n  const [newUrl, setNewUrl] = useState([\"\"]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    blogService.getAll().then(allBlogs => {\n      setBlogs(allBlogs);\n    });\n  }, []);\n\n  const addBlog = event => {\n    event.preventDefault();\n    const newObject = {\n      content: newTitle,\n      name: newAuthor,\n      url: newUrl,\n      id: Math.random() * 1000\n    };\n\n    const addedName = newTitle;\n\n    const blogList = blogs.filter(b => addedName === b.content);\n\n    if (blogList.length !== 0) {\n      const id = blogList[0].id;\n      if (window.confirm(\"Blog is already in the list, replace it?\")) {\n        blogService.update(id, newObject).then(newBlog => {\n          console.log(newBlog);\n\n          setBlogs(blogs.map(blog => (blog.id !== id ? blog : newBlog)));\n        });\n      }\n      return setBlogs(blogs.concat(newObject));\n    }\n\n    axios.post(\"http://localhost:3001/blogs\", newObject).then(response => {\n      setBlogs(blogs.concat(response.data));\n      setNewTitle(\"\");\n      setNewAuthor(\"\");\n      setNewUrl(\"\");\n      setErrorMessage(`New blog called ${newObject.content} was added`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    });\n    return setBlogs(blogs.concat(newObject));\n  };\n\n  const handleTitleChange = title => {\n    setNewTitle(title.target.value);\n  };\n\n  const handleAuthorChange = author => {\n    setNewAuthor(author.target.value);\n  };\n\n  const handleUrlChange = u => {\n    setNewUrl(u.target.value);\n  };\n\n  const handleDelete = id => {\n    const kill = blogs.filter(blog => blog.id !== id);\n    if (window.confirm(\"Do you really want to delete this blog?\")) {\n      blogService.destroy(id);\n      setBlogs(kill);\n      setErrorMessage(`Blog was removed`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Blog List</h1>\n      <form onSubmit={addBlog}>\n        <Notification message={errorMessage} />\n        <h4>Add New</h4>\n        <div>\n          Title:\n          <input value={newTitle} onChange={handleTitleChange} />\n        </div>\n        <div>\n          Author:\n          <input value={newAuthor} onChange={handleAuthorChange} />\n        </div>\n        <div>\n          Url:\n          <input value={newUrl} onChange={handleUrlChange} />\n        </div>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n      <h4>Added Blogs:</h4>\n      <Filter blogs={blogs} handleDelete={handleDelete} />\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}